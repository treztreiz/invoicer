version: "3.9"

services:
  database:
    image: postgres:18-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD required}
    volumes:
      - db_data:/var/lib/postgresql/data
    deploy:
      restart_policy:
        condition: on-failure

  backend:
    image: ${BACKEND_IMAGE:-ghcr.io/example/invoicer-backend:latest}
    environment:
      APP_ENV: prod
      APP_SECRET: ${APP_SECRET:?APP_SECRET required}
      DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:?POSTGRES_PASSWORD required}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-18}&charset=${POSTGRES_CHARSET:-utf8}
    volumes:
      - uploads:/app/public/uploads
    deploy:
      restart_policy:
        condition: on-failure

  web:
    image: ${WEB_IMAGE:-ghcr.io/example/invoicer-web:latest}
    ports:
      - target: 80
        published: ${WEB_PUBLISHED_PORT:-80}
        protocol: tcp
        mode: ingress
      - target: 443
        published: ${WEB_PUBLISHED_TLS_PORT:-443}
        protocol: tcp
        mode: ingress
    volumes:
      - uploads:/srv/uploads:ro
      - certs:/etc/nginx/certs:ro
      - acme:/var/www/certbot:ro
    deploy:
      restart_policy:
        condition: on-failure

volumes:
  db_data:
  uploads:
  certs:
  acme:
  letsencrypt:
